<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/rabbit 
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


	<!-- connect to MySQL database -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${spring.datasource.driverClassName}" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
	</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="mongoClient" class="com.mongodb.MongoClientURI">
	  <constructor-arg ref="mongoClientUri"/>
	</bean>

	<bean id="mongoClientUri" class="java.lang.String">
	  <constructor-arg value="${spring.data.mongodb.uri}"/>
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo" />
		<constructor-arg name="databaseName" value="${mongo.DB}" />
		<!-- <property name="writeConcern" value="SAFE" /> Requires replication -->
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.vclues.core" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>


	<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter"/>

	<rabbit:connection-factory host="localhost" password="frog90805" username="khimung" id="connectionFactory" channel-cache-size="10" />

	<!-- routing-key must match to pattern : has nothing to do with the message itself or the class name of the message -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
		exchange="myExchange"  queue="profiles" routing-key="com.vclues.core.model.Disputes" message-converter="jsonMessageConverter" />

	<rabbit:admin connection-factory="connectionFactory" />

	<rabbit:queue name="disputes"  />

	<rabbit:topic-exchange name="myExchange">
		<rabbit:bindings>
			<rabbit:binding queue="disputes" pattern="com.vclues.core.model.Disputes" />
		</rabbit:bindings>
	</rabbit:topic-exchange>

<!-- 
	<rabbit:listener-container
		connection-factory="connectionFactory"  concurrency="2" message-converter="jsonMessageConverter">
		<rabbit:listener ref="DisputeController method="listen"  queues="profiles" />
	</rabbit:listener-container>
 -->
 
 
 	<!-- connect to MySQL database -->
	<bean id="oauthDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${spring.datasource_oauth.driverClassName}" />
		<property name="url" value="${spring.datasource_oauth.url}" />
		<property name="username" value="${spring.datasource_oauth.username}" />
		<property name="password" value="${spring.datasource_oauth.password}" />
	</bean>


	<bean id="oauthJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="oauthDataSource" />
	</bean>

	<bean id="oauthTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="oauthEntityManagerFactory" />
	</bean>

	<bean id="oauthEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="oauthDataSource" />
		<property name="packagesToScan" value="de.frontierpsychiatrist.example.oauth.domain" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>
 

</beans>
